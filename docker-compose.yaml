services:
  vue-app:
    build:
      context: ./
      dockerfile: ./vue-app/Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./vue-app:/app/vue-app
      - /app/vue-app/node_modules # So HMR works
    environment:
      - NODE_ENV=production # per nodejs.org, always run in prod
    command: npm run dev
    depends_on:
      - api-app

  api-app:
    build:
      context: ./
      dockerfile: ./api-app/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./db/data:/app/db/data
    environment:
      - NODE_ENV=production
      - SQLITE_DB_PATH=/app/data/database.sqlite
      - PORT=3000
    command: npm start
    develop:
      watch:
        - action: sync+restart
          path: ./api-app/
          target: /app/api-app
          ignore:
            - ./api-app/node_modules/
        - action: rebuild
          path: ./api-app/package.json
          target: /app/api-app/package.json
        
        # ../db
        - action: sync+restart
          path: ./db
          target: /app/db
          ignore:
            - ./db/node_modules/
            - ./db/data/
        - action: rebuild
          path: ./db/package.json
          target: /app/db/package.json

        # ../api-spec
        - action: sync+restart
          path: ./api-spec/dist
          target: /app/api-spec/dist

  api-spec:
    build:
      context: ./
      dockerfile: ./api-spec/Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./api-spec/dist:/app/api-spec/dist
    develop:
      watch:
        - action: sync+restart
          path: ./api-spec/openapi.yaml
          target: /app/api-spec/openapi.yaml
    command: npm run generate-and-serve