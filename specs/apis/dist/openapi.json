{
  "openapi": "3.0.0",
  "info": {
    "title": "Your Product's API",
    "version": "1.0.0",
    "description": "The API used internally by web clients."
  },
  "servers": [
    {
      "url": "http://api.docker.localhost/",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register New User",
        "operationId": "registerUser",
        "tags": ["auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate User",
        "operationId": "loginUser",
        "tags": ["auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout User",
        "operationId": "logoutUser",
        "tags": ["auth"],
        "responses": {
          "200": {
            "description": "Successful logout"
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "summary": "Verify Authentication Status",
        "description": "Used by Caddy for forward authentication. Verifies if the user is authenticated and adds user information headers for downstream services.",
        "operationId": "verifyAuth",
        "tags": ["auth"],
        "responses": {
          "200": {
            "description": "User is authenticated",
            "headers": {
              "X-User-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "The authenticated user's ID"
              },
              "X-User-Email": {
                "schema": {
                  "type": "string",
                  "format": "email"
                },
                "description": "The authenticated user's email"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The authenticated user's ID"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "The authenticated user's email"
                    }
                  },
                  "required": ["id", "email"]
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "summary": "List all todos",
        "operationId": "getTodos",
        "tags": ["todos"],
        "responses": {
          "200": {
            "description": "A list of todo items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/todo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new todo",
        "operationId": "createTodo",
        "tags": ["todos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created todo item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "summary": "Update a todo",
        "operationId": "updateTodo",
        "tags": ["todos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated todo item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Todo item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a todo",
        "operationId": "deleteTodo",
        "tags": ["todos"],
        "responses": {
          "204": {
            "description": "Todo item successfully deleted"
          },
          "404": {
            "description": "Todo item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/examples": {
      "get": {
        "summary": "Get all examples",
        "tags": ["examples"],
        "responses": {
          "200": {
            "description": "List of examples",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new example",
        "tags": ["examples"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExampleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created example",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/examples/{id}": {
      "get": {
        "summary": "Get example by ID",
        "tags": ["examples"],
        "responses": {
          "200": {
            "description": "Example item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "404": {
            "description": "Example not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "$ref": "#/components/schemas/user"
      },
      "Todo": {
        "$ref": "#/components/schemas/todo"
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "required": ["id", "email"],
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "error": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable error message"
          },
          "code": {
            "type": "string",
            "description": "An optional machine-readable error code"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "todo": {
        "type": "object",
        "required": ["id", "title", "completed", "createdAt"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the todo item"
          },
          "title": {
            "type": "string",
            "description": "The title/description of the todo item"
          },
          "completed": {
            "type": "boolean",
            "description": "Whether the todo item has been completed"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the todo item was created"
          }
        }
      },
      "CreateTodoRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title/description of the todo item"
          }
        }
      },
      "UpdateTodoRequest": {
        "type": "object",
        "required": ["title", "completed"],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title/description of the todo item"
          },
          "completed": {
            "type": "boolean",
            "description": "Whether the todo item has been completed"
          }
        }
      },
      "Example": {
        "type": "object",
        "required": ["id", "name", "createdAt"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateExampleRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "required": ["id", "email", "name"],
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
