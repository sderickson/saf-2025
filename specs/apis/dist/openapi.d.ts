/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/todos": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List all todos */
    get: operations["getTodos"];
    put?: never;
    /** Create a new todo */
    post: operations["createTodo"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/todos/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    /** Update a todo */
    put: operations["updateTodo"];
    post?: never;
    /** Delete a todo */
    delete: operations["deleteTodo"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Todo: components["schemas"]["todo"];
    todo: {
      /** @description Unique identifier for the todo item */
      id: number;
      /** @description The title/description of the todo item */
      title: string;
      /** @description Whether the todo item has been completed */
      completed: boolean;
      /**
       * Format: date-time
       * @description When the todo item was created
       */
      createdAt: string;
    };
    CreateTodoRequest: {
      /** @description The title/description of the todo item */
      title: string;
    };
    error: {
      /** @description A human-readable error message */
      message: string;
      /** @description An optional machine-readable error code */
      code?: string;
    };
    UpdateTodoRequest: {
      /** @description The title/description of the todo item */
      title: string;
      /** @description Whether the todo item has been completed */
      completed: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  getTodos: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description A list of todo items */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["todo"][];
        };
      };
    };
  };
  createTodo: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTodoRequest"];
      };
    };
    responses: {
      /** @description The created todo item */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["todo"];
        };
      };
      /** @description Invalid request body */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["error"];
        };
      };
    };
  };
  updateTodo: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateTodoRequest"];
      };
    };
    responses: {
      /** @description The updated todo item */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["todo"];
        };
      };
      /** @description Invalid request body */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["error"];
        };
      };
      /** @description Todo item not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["error"];
        };
      };
    };
  };
  deleteTodo: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Todo item successfully deleted */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Todo item not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["error"];
        };
      };
    };
  };
}
